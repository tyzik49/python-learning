		# 1. Создать список и заполнить его элементами различных типов данных.
		# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
		# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.


old_list = ["text", 10, "new_text", 20, None]
for new_list in old_list:
    print(type(new_list))








		# 2. Для списка реализовать обмен значений соседних элементов, т.е.
		# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
		# При нечетном количестве элементов последний сохранить на своем месте.
		# Для заполнения списка элементов необходимо использовать функцию input().


llist = (input("Введите 5  элементов через пробел :").split())
if llist[4:] :
    llist1 = list((llist[1], llist[0], llist[3], llist[2], llist[4]))
    print(llist1)
else:
    print("Неверное количество элементов, попробуйте ещё раз!")







		# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
		# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
		# Напишите решения через list и через dict.


		#Решение способом Dict

month = int(input("Введите число месяца:"))
my_dict = {1: "Январь-Зима", 2:"Февраль-Зима",  3:"Март-Весна", 4:"Апрель-Весна",
           5:"Май-Весна",   6:"Июнь-Лето", 7:"Июль-Лето", 8:"Август-Лето",
           9:"Сентябрь-Осень", 10:"Октябрь-Осень", 11:"Ноябрь-Осень", 12:"Декабрь-Зима"}

print(my_dict.get(month))


		#Решение способом List

month = int(input("Введите число месяца:"))
my_list = ["None", "Январь-зима", "Февраль-Зима", "Март-Весна", "Апрель-Весна",
           "Май-Весна", "Июнь-Лето", "Июль-Лето", "Август-Лето",
           "Сентябрь-Осень", "Октябрь-Осень", "Ноябрь-Осень", "Декабрь-Зима"]
print(my_list[month])









		# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
		# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
		# Если в слово длинное, выводить только первые 10 букв в слове.


words = (input("Введите несколько слов через пробел :").split())
x = 0
for i in words:
    x += 1
    print(f"{x}: {i[:10]}")








		# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
		# У пользователя необходимо запрашивать новый элемент рейтинга.
		# Если в рейтинге существуют элементы с одинаковыми значениями,
		# то новый элемент с тем же значением должен разместиться после них.

		# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
		# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
		# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
		# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
		#
		# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].


num = int(input("Введите число от 1 до 9:"))

my_list = [7, 5, 3, 3, 2]
my_list.append(num)
my_list.sort()
my_list.reverse()
print(my_list)




